{"version":3,"sources":["logo.svg","input-components/CurrencySelector.jsx","input-components/AmountInput.jsx","data/currencies.js","services/Rates.js","roundToCents.js","CurrencyConverterForm.jsx","CurrencyHistoryGraph.jsx","services/HistoricalRates.js","CurrencyHistory.jsx","CurrencyRatesStatus.jsx","CurrencyConverter.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","renderOption","currency","key","value","code","symbol","emoji","CurrencySelector","props","onChange","incomingCurrencyCode","currencies","useState","setValue","onSelectChange","event","target","className","map","i","defaultProps","AmountInput","incomingAmount","amount","setAmount","onInputChange","amountValue","type","fetch","window","Rates","this","source","url","name","endpoint","base","date","rates","isLoaded","error","currencyCodeFrom","currencyCodeTo","baseAmount","convertToBase","finalAmount","convertFromBase","Number","reload","Promise","resolve","getLoadParams","then","result","json","data","finally","defaultCurrencies","filter","Object","keys","forEach","find","push","sort","curr1","curr2","roundToCents","n","Math","round","CurrencyConverterForm","onCurrencyChange","state","amounts","currencyCode","setState","handleAmountChange","conversionIndex","getConversionIndex","String","fromCurrency","toCurrency","convertedAmount","convert","onCurrencyChanges","handleCurrencyChange","onAmountChanges","getCurrencies","renderCurrencyColumn","React","Component","getPoints","maxWidth","maxHeight","maxConvertedRate","Infinity","minConvertedRate","convertedRates","rate","convertedRate","coords","r","x","length","y","unshift","join","CurrencyHistoryGraph","width","height","viewBox","points","HistoricalRates","historyDayRange","todayDate","Date","startDate","setDate","getDate","getIsoDate","dates","getHistoryDateStrings","rateObj","newRateObj","a","b","getFullYear","getMonth","renderRow","renderTable","CurrencyHistory","setError","setIsLoaded","isOpen","setIsOpen","useEffect","load","getHistoricalRatesByCurrencies","onOpenToggleClick","onClick","renderSourceInfo","sourceUrl","sourceName","sourceDate","dateString","date1","date2","d1","d2","areDatesEqual","href","rel","CurrencyRatesStatus","CurrencyConverter","setCurrency","src","logo","alt","curr","App","Boolean","location","hostname","match","displayError","text","err","console","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1950a777.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrencySelector.css';\n\nconst NOOP = () => {};\nconst DEFAULT_VALUE = 'USD';\n\n// Rendering helpers\n\nfunction renderOption(currency = {}, key = 0) {\n  return (\n    <option value={currency.code} key={key}>\n      {currency.code}\n      {(currency.symbol) ? ` ${currency.symbol}` : ''}\n      {(currency.emoji) ? ` ${currency.emoji}` : ''}\n    </option>\n  );\n}\n\n// Using functional component style with Hooks\n\nfunction CurrencySelector(props = {}) {\n  const { onChange, incomingCurrencyCode, currencies } = props;\n  const [value, setValue] = useState(incomingCurrencyCode);\n\n  function onSelectChange(event) {\n    setValue(event.target.value);\n    onChange(event.target.value);\n  }\n\n  return (\n    <select className=\"CurrencySelector\" onChange={onSelectChange} value={value}>\n      {currencies.map((currency, i) => renderOption(currency, i))}\n    </select>\n  );\n}\n\nCurrencySelector.propTypes = {\n  onChange: PropTypes.func,\n  incomingCurrencyCode: PropTypes.string,\n  currencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nCurrencySelector.defaultProps = {\n  onChange: NOOP,\n  incomingCurrencyCode: DEFAULT_VALUE,\n  currencies: [],\n};\n\nexport default CurrencySelector;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './AmountInput.css';\n\nconst NOOP = () => {};\n\n// Using functional component style with Hooks\n\nfunction AmountInput(props = {}) {\n  const { onChange, incomingAmount } = props;\n  const [amount, setAmount] = useState(0);\n\n  const onInputChange = (event) => {\n    // TODO: Add a debounce?\n    const amountValue = event.target.value;\n    setAmount(amountValue);\n    onChange(amountValue);\n  };\n\n  if (incomingAmount !== amount) {\n    setAmount(incomingAmount);\n  }\n\n  return (\n    <div className=\"AmountInput-container\">\n      <input className=\"AmountInput\" type=\"number\" onChange={onInputChange} value={amount} />\n    </div>\n  );\n}\n\nAmountInput.propTypes = {\n  onChange: PropTypes.func,\n  incomingAmount: PropTypes.string,\n};\n\nAmountInput.defaultProps = {\n  onChange: NOOP,\n  incomingAmount: null,\n};\n\nexport default AmountInput;\n","const currencies = [\n  { code: 'USD', symbol: '$', emoji: '💵' },\n  { code: 'GBP', symbol: '£', emoji: '💷' },\n  { code: 'CNY', symbol: '¥' },\n  { code: 'EUR', symbol: '€', emoji: '💶' },\n  { code: 'INR', symbol: '₹' },\n  { code: 'JPY', symbol: '¥', emoji: '💴' },\n  { code: 'CHF', symbol: 'Fr.' },\n];\n\nexport default currencies;\n","import defaultCurrencies from '../data/currencies';\n\nconst { fetch } = window;\nconst USD_ISO_CODE = 'USD';\nconst NO_CURRENCY_SYMBOL = '';\nconst EXCHANGE_RATES_BASE_URL = 'https://api.exchangeratesapi.io/';\nconst LATEST_ENDPOINT = 'latest';\nconst SOURCE_INFO_URL = 'https://exchangeratesapi.io/';\nconst SOURCE_NAME = 'exchangeratesapi.io';\n\nclass Rates {\n  constructor() {\n    this.source = {\n      url: SOURCE_INFO_URL,\n      name: SOURCE_NAME,\n    };\n    this.endpoint = LATEST_ENDPOINT;\n    this.base = USD_ISO_CODE;\n    this.date = null;\n    this.rates = {};\n    this.isLoaded = false;\n    this.error = null;\n  }\n\n  getDate() {\n    return this.date;\n  }\n\n  convert(currencyCodeFrom = USD_ISO_CODE, currencyCodeTo = USD_ISO_CODE, amount = 0) {\n    if (!this.isLoaded || !this.rates[currencyCodeFrom] || !this.rates[currencyCodeTo]) {\n      return false;\n    }\n    const baseAmount = this.convertToBase(currencyCodeFrom, amount);\n    const finalAmount = this.convertFromBase(currencyCodeTo, baseAmount);\n    return finalAmount;\n  }\n\n  convertToBase(currencyCodeFrom = USD_ISO_CODE, amount = 0) {\n    if (!this.rates[currencyCodeFrom]) { return false; }\n    return Number(amount) / this.rates[currencyCodeFrom];\n  }\n\n  convertFromBase(currencyCodeTo = USD_ISO_CODE, amount = 0) {\n    if (!this.rates[currencyCodeTo]) { return false; }\n    return Number(amount) * this.rates[currencyCodeTo];\n  }\n\n  getLoadParams(base = this.base) {\n    return `base=${base}`;\n  }\n\n  load(base = this.base, reload = false) {\n    if (this.isLoaded && !reload) { return Promise.resolve(); }\n    this.isLoaded = false;\n    return fetch(`${EXCHANGE_RATES_BASE_URL}${this.endpoint}?${this.getLoadParams(base)}`)\n      .then((result) => result.json())\n      .then(\n        (data) => {\n          this.error = null;\n          this.base = data.base;\n          this.date = data.date;\n          this.rates = data.rates;\n          // console.log('Loaded rates from', this.endpoint, this);\n        },\n        (error) => {\n          this.error = error;\n        },\n      )\n      .finally(() => { this.isLoaded = true; });\n  }\n\n  getCurrencies() {\n    const currencies = [...defaultCurrencies];\n    if (!this.isLoaded) {\n      return currencies;\n    }\n    // Remove any currencies from the list if we don't have rates for them\n    currencies.filter((currency) => this.rates[currency.code]);\n    // Add any additional currencies if we have rates\n    Object.keys(this.rates).forEach((code) => {\n      const foundCurrency = currencies.find((currency) => currency.code === code);\n      if (!foundCurrency) {\n        currencies.push({ code, symbol: NO_CURRENCY_SYMBOL });\n      }\n    });\n    // Alphabetize\n    return currencies.sort((curr1, curr2) => ((curr1.code < curr2.code) ? -1 : 0));\n  }\n\n  static validator() {\n    // TODO: Validate an instantiated object via PropTypes.objectOf\n  }\n}\n\nexport default Rates;\n","function roundToCents(n) {\n  return Math.round(n * 100) / 100;\n}\nexport default roundToCents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrencySelector from './input-components/CurrencySelector';\nimport AmountInput from './input-components/AmountInput';\nimport Rates from './services/Rates';\nimport roundToCents from './roundToCents';\nimport './CurrencyConverterForm.css';\n\nconst NOOP = () => {};\nconst USD_ISO_CODE = 'USD';\nconst GBP_ISO_CODE = 'GBP';\nconst EMPTY_AMOUNT = '';\n\n// Class Component example\n\nclass CurrencyConverterForm extends React.Component {\n  static getConversionIndex(i) {\n    return (i === 0) ? 1 : 0;\n  }\n\n  constructor(props = {}) {\n    super();\n    const { rates, onCurrencyChange } = props;\n    this.rates = rates;\n    this.state = {\n      currency: [USD_ISO_CODE, GBP_ISO_CODE],\n      amounts: [EMPTY_AMOUNT, EMPTY_AMOUNT],\n    };\n    this.onCurrencyChange = onCurrencyChange;\n    // Trigger this on instantiation to send the currencies back to parent\n    const { currency } = this.state;\n    this.onCurrencyChange(currency);\n  }\n\n  handleCurrencyChange(currencyCode, i) {\n    const { amounts, currency } = this.state;\n    currency[i] = currencyCode;\n    this.setState({ currency });\n    if (amounts[i] !== EMPTY_AMOUNT) {\n      this.handleAmountChange(amounts[0], 0);\n    }\n    this.onCurrencyChange(currency); // callback\n  }\n\n  handleAmountChange(amount, i) {\n    const { currency } = this.state;\n    const conversionIndex = CurrencyConverterForm.getConversionIndex(i);\n    const amounts = [];\n    amounts[i] = String(amount);\n    const fromCurrency = currency[i];\n    const toCurrency = currency[conversionIndex];\n    const convertedAmount = this.rates.convert(fromCurrency, toCurrency, amount);\n    amounts[conversionIndex] = String(roundToCents(convertedAmount));\n\n    this.setState({ amounts });\n    // console.log(this.state);\n  }\n\n  renderCurrencyColumn(currencies = [], i = 0) {\n    const { currency, amounts } = this.state;\n    const onCurrencyChanges = (currencyCode) => this.handleCurrencyChange(currencyCode, i);\n    const onAmountChanges = (amount) => this.handleAmountChange(amount, i);\n    return (\n      <div>\n        <CurrencySelector\n          incomingCurrencyCode={currency[i]}\n          onChange={onCurrencyChanges}\n          currencies={currencies}\n        />\n        <AmountInput incomingAmount={amounts[i]} onChange={onAmountChanges} />\n      </div>\n    );\n  }\n\n  render() {\n    const currencies = this.rates.getCurrencies();\n    return (\n      <section>\n        <form className=\"CurrencyConverterForm\">\n          {this.renderCurrencyColumn(currencies, 0)}\n          <div>=</div>\n          {this.renderCurrencyColumn(currencies, 1)}\n        </form>\n      </section>\n    );\n  }\n}\n\nCurrencyConverterForm.propTypes = {\n  rates: PropTypes.objectOf(Rates.validator),\n  onCurrencyChange: PropTypes.func,\n};\n\nCurrencyConverterForm.defaultProps = {\n  rates: {},\n  onCurrencyChange: NOOP,\n};\n\nexport default CurrencyConverterForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrencyHistoryGraph.css';\n\nfunction getPoints(data = [], currency = [], maxWidth = 300, maxHeight = 300) {\n  let maxConvertedRate = -Infinity;\n  let minConvertedRate = Infinity;\n  const convertedRates = data.map((rate) => {\n    const convertedRate = (rate[currency[0]] === 0) ? 0 : rate[currency[1]] / rate[currency[0]];\n    if (convertedRate > maxConvertedRate) { maxConvertedRate = convertedRate; }\n    if (convertedRate < minConvertedRate) { minConvertedRate = convertedRate; }\n    return convertedRate;\n  });\n  const coords = convertedRates.map((r, i) => {\n    const x = (i / data.length) * maxWidth;\n    const y = (maxConvertedRate === minConvertedRate) ? maxHeight : (\n      (((r - minConvertedRate) / (maxConvertedRate - minConvertedRate)) * -maxHeight) + maxHeight\n    );\n    return `${x} ${y}`;\n  });\n  coords.unshift(`0 ${maxHeight}`);\n  coords.push(`${maxWidth} ${maxHeight}`, `0 ${maxHeight}`);\n  return coords.join(',');\n}\n\nfunction CurrencyHistoryGraph(props = {}) {\n  const {\n    data, currency, width, height,\n  } = props;\n  return (\n    <svg height=\"100%\" width=\"100%\" viewBox={`0 0 ${width} ${height}`}>\n      <polygon\n        className=\"CurrencyHistoryGraph-polygon\"\n        points={getPoints(data, currency, width, height)}\n      />\n    </svg>\n  );\n}\n\nCurrencyHistoryGraph.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  currency: PropTypes.arrayOf(PropTypes.string),\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nCurrencyHistoryGraph.defaultProps = {\n  data: [],\n  currency: [],\n  width: 300,\n  height: 300,\n};\n\nexport default CurrencyHistoryGraph;\n","import Rates from './Rates';\n\nconst HISTORY_ENDPOINT = 'history';\nconst HISTORY_DAY_RANGE = 30;\n\nclass HistoricalRates extends Rates {\n  constructor() {\n    super();\n    this.endpoint = HISTORY_ENDPOINT;\n    this.historyDayRange = HISTORY_DAY_RANGE;\n  }\n\n  static getIsoDate(date) {\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n  }\n\n  getHistoryDateStrings() {\n    const todayDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - this.historyDayRange);\n    return [HistoricalRates.getIsoDate(startDate), HistoricalRates.getIsoDate(todayDate)];\n  }\n\n  // Override method from Rates\n  getLoadParams(base = this.base) {\n    const dates = this.getHistoryDateStrings();\n    return `base=${base}&start_at=${dates[0]}&end_at=${dates[1]}`;\n  }\n\n  getHistoricalRatesByCurrencies(curr1 = this.base, curr2 = this.base) {\n    return Object.keys(this.rates).map((date) => {\n      const rateObj = this.rates[date];\n      const newRateObj = { date };\n      newRateObj[curr1] = rateObj[curr1];\n      newRateObj[curr2] = rateObj[curr2];\n      return newRateObj;\n    }).sort((a, b) => ((a.date < b.date) ? -1 : 0));\n  }\n}\n\nexport default HistoricalRates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CurrencyHistoryGraph from './CurrencyHistoryGraph';\nimport HistoricalRates from './services/HistoricalRates';\nimport roundToCents from './roundToCents';\nimport './CurrencyHistory.css';\n\nconst GRAPH_WIDTH = 900;\nconst GRAPH_HEIGHT = 300;\n\n// TODO: Move table to its own component?\n\nfunction renderRow(rate = {}, currency = [], i = 0) {\n  return (\n    <tr key={i}>\n      <td>{rate.date}</td>\n      <td>{roundToCents(rate[currency[0]])}</td>\n      <td>{roundToCents(rate[currency[1]])}</td>\n      <td>{roundToCents(rate[currency[1]] / rate[currency[0]])}</td>\n    </tr>\n  );\n}\n\nfunction renderTable(data = [], currency = []) {\n  return (\n    <table className=\"CurrencyHistory-table\">\n      <thead>\n        <tr>\n          <td>Date</td>\n          <td>{currency[0]}</td>\n          <td>{currency[1]}</td>\n          <td>{`${currency[1]}/${currency[0]} Rate`}</td>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((rate, i) => renderRow(rate, currency, i))}\n      </tbody>\n    </table>\n  );\n}\n\n// Functional Component\n\nfunction CurrencyHistory(props = {}) {\n  const { currency } = props;\n  const [rates] = useState(new HistoricalRates());\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    rates.load()\n      .finally(() => {\n        setError(rates.error);\n        setIsLoaded(rates.isLoaded);\n      });\n  });\n\n  const data = rates.getHistoricalRatesByCurrencies(currency[0], currency[1]);\n  const onOpenToggleClick = () => setIsOpen(!isOpen);\n\n  return (\n    <div className=\"CurrencyHistory-container\">\n      <section className={(isOpen) ? 'CurrencyHistory CurrencyHistory-open' : 'CurrencyHistory'}>\n        <div>\n          {(isLoaded) ? '' : 'Loading...'}\n          {error || ''}\n        </div>\n        <div className=\"CurrencyHistory-graph-container\">\n          <div>\n            <span className=\"CurrencyHistory-graph-currency\">{currency[1]}</span>\n            /\n            <span className=\"CurrencyHistory-graph-currency\">{currency[0]}</span>\n            <span className=\"CurrencyHistory-graph-day-range\">\n              {`Last ${rates.historyDayRange} Days`}\n            </span>\n          </div>\n          <CurrencyHistoryGraph\n            data={data}\n            currency={currency}\n            width={GRAPH_WIDTH}\n            height={GRAPH_HEIGHT}\n          />\n        </div>\n        <div className=\"CurrencyHistory-drawer\">\n          {renderTable(data, currency)}\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"CurrencyHistory-toggle-drawer-button\"\n            onClick={onOpenToggleClick}\n          >\n            {(isOpen) ? 'Close data' : 'View table of data'}\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nCurrencyHistory.propTypes = {\n  currency: PropTypes.arrayOf(PropTypes.string),\n};\n\nCurrencyHistory.defaultProps = {\n  currency: [],\n};\n\nexport default CurrencyHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrencyRatesStatus.css';\n\nfunction areDatesEqual(date1, date2) {\n  const d1 = new Date(date1);\n  const d2 = new Date(date2);\n  return (d1.getFullYear() === d2.getFullYear()\n    && d1.getMonth() === d2.getMonth()\n    && d1.getDate() === d2.getDate()\n  );\n}\n\nfunction renderSourceInfo(sourceUrl, sourceName, sourceDate) {\n  const dateString = areDatesEqual(sourceDate, new Date()) ? 'today' : sourceDate;\n  return (\n    <span>\n      Last updated\n      <span className=\"CurrencyRatesStatus-date\">{dateString}</span>\n      with rates from\n      {' '}\n      <a href={sourceUrl} rel=\"noreferrer\">\n        {sourceName}\n      </a>\n    </span>\n  );\n}\n\nfunction CurrencyRatesStatus(props = {}) {\n  const {\n    error, isLoaded, sourceUrl, sourceName, sourceDate,\n  } = props;\n  return (\n    <div className=\"CurrencyRatesStatus-container\">\n      <div className=\"CurrencyRatesStatus\">\n        {(isLoaded) ? renderSourceInfo(sourceUrl, sourceName, sourceDate) : 'Loading...'}\n        {error || ''}\n      </div>\n    </div>\n  );\n}\n\nCurrencyRatesStatus.propTypes = {\n  error: PropTypes.string,\n  isLoaded: PropTypes.bool,\n  sourceUrl: PropTypes.string,\n  sourceName: PropTypes.string,\n  sourceDate: PropTypes.string,\n};\n\nCurrencyRatesStatus.defaultProps = {\n  error: null,\n  isLoaded: false,\n  sourceUrl: '#',\n  sourceName: 'N/A',\n  sourceDate: 'N/A',\n};\n\nexport default CurrencyRatesStatus;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport CurrencyConverterForm from './CurrencyConverterForm';\nimport CurrencyHistory from './CurrencyHistory';\nimport CurrencyRatesStatus from './CurrencyRatesStatus';\nimport Rates from './services/Rates';\nimport './CurrencyConverter.css';\n\n// Functional component style with Hooks\n\nfunction CurrencyConverter() {\n  const [rates] = useState(new Rates());\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currency, setCurrency] = useState([]);\n\n  useEffect(() => {\n    rates.load()\n      .finally(() => {\n        setError(rates.error);\n        setIsLoaded(rates.isLoaded);\n      });\n  });\n\n  const onCurrencyChange = (curr) => setCurrency([...curr]);\n\n  return (\n    <article className=\"CurrencyConverter\">\n      <header className=\"CurrencyConverter-header\">\n        <h1>\n          Currency Converter\n        </h1>\n        <div className=\"CurrencyConverter-subtitle\">\n          Made in\n          <img src={logo} className=\"CurrencyConverter-logo\" alt=\"React Logo\" />\n          React\n        </div>\n      </header>\n      <CurrencyRatesStatus\n        isLoaded={isLoaded}\n        error={error}\n        sourceUrl={rates.source.url}\n        sourceName={rates.source.name}\n        sourceDate={rates.getDate()}\n      />\n      <CurrencyConverterForm rates={rates} onCurrencyChange={onCurrencyChange} />\n      <CurrencyHistory currency={currency} />\n    </article>\n  );\n}\n\nexport default CurrencyConverter;\n","import React from 'react';\n\nimport './App.css';\nimport CurrencyConverter from './CurrencyConverter';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <CurrencyConverter />\n      <footer className=\"App-footer\">\n        <span>\n          <a href=\"https://github.com/Lukenickerson/react-currency-converter\">\n            Open Source on GitHub\n          </a>\n        </span>\n        <span className=\"App-credits\">\n          Created by\n          <a href=\"https://github.com/Lukenickerson\" className=\"App-author\">Luke Nickerson</a>\n          <span>&copy; 2020</span>\n        </span>\n      </footer>\n    </main>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction displayLog(text) {\n  console.log(text); // eslint-disable-line no-console\n}\n\nfunction displayError(text, err) {\n  console.error(text, err); // eslint-disable-line no-console\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          displayLog('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => { // eslint-disable-line no-param-reassign\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              displayLog('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              displayLog('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      displayError('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      displayLog('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        displayError(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}